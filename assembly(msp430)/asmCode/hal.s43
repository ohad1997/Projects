#include  "bsp.h"

              MODULE  HAL
              PUBLIC  SysConfig,Print2LEDs,ClrLEDs,ReadSWs,PBs_handler,delay
              EXTERN  GPIOconfig
              EXTERN  State
            
              RSEG    CODE
;--------------------------------------------------------------------
;             System Configuration  
;--------------------------------------------------------------------
SysConfig     call    #GPIOconfig
              ret
;--------------------------------------------------------------------
;Print LEDs - function only with argument (without return value)  
;--------------------------------------------------------------------
Print2LEDs    pop     R4        ; save return address
              pop     R5        ; get value to print
               
              mov.b   R5,LEDsArrPort ;function body
              
              push.w  R4
              ret   
;--------------------------------------------------------------------
;Clear LEDs - void function (without arguments and return value)
;--------------------------------------------------------------------
ClrLEDs       clr.b   LEDsArrPort
              ret                 
;--------------------------------------------------------------------
;Read SWs -  function, without arguments and return value
;--------------------------------------------------------------------
ReadSWs      pop      R4        ; save return address

             mov.b    PBsArrPort,R5 ;function body
             and.b    #SWmask,R5
             push.w   R5            ;function body end
             
             push.w   R4
             ret
;----------------------------------------------------------------------- 
;            PORT2 Interrupt Service Routine
;-----------------------------------------------------------------------
PBs_handler  push.w   #debounceVal
             call     #delay    
             bit.b    #PB0,PBsArrIntPend   ;check if PB0 is pushed
             jnz      PB0sel 
             bit.b    #PB1,PBsArrIntPend   ;check if PB1 is pushed
             jnz      PB1sel
             bit.b    #PB2,PBsArrIntPend   ;check if PB2 is pushed
             jnz      PB2sel
             bit.b    #PB3,PBsArrIntPend   ;check if PB3 is pushed
             jnz      PB3Sel
             reti                ; interrupt hapened from another source
             
PB0sel       mov      #1,State 
             mov      #PB0,R4     ; which IntPend to clear
             jmp      exitLPM0
PB1sel       mov      #2,State
             mov      #PB1,R4     ; which IntPend to clear
             jmp      exitLPM0
PB2sel       mov      #4,State    ; idle state
             mov      #PB2,R4     ; which IntPend to clear
             jmp      exitLPM0
PB3Sel       mov      #8,State    ; idle state
             mov      #PB3,R4     ; which IntPend to clear
             
exitLPM0     bic      #CPUOFF,0(SP)  ; Exit LMP0
             bic.b    R4,PBsArrIntPend  
             reti
;----------------------------------------------------------------------------------------------
;            Polling based Delay function
;----------------------------------------------------------------------------------------------                     
delay        pop      R4        ; save return address
             pop      R5        ; get delay value
             
L            dec.w    R5      ;function body begin                 
             jnz      L       ;function body end
             
             push.w   R4
             ret
;----------------------------------------------------------------------------------------------
             ENDMOD
             END


 