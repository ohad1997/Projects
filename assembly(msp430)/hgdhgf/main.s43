#include  "bsp.h"

             NAME   MAIN
             PUBLIC State,main,RotLEDMem,DecLEDMem,ID_Ohad,ArrSize
             EXTERN SysConfig,ClrLEDs,RlaLED,DecLED,delay,PWM_wave
             EXTERN PrintLEDs,ReadSWs,PrintArr
             
;----------------------------------------------------------------------------------
             ORG      DataSegStart         ; Begins a DATA segment
             
State        DW       0            
DecLEDMem    DW       0xFF
RotLEDMem    DW       0x01
ID_Ohad      DW       3,1,8,5,1,0,4,4,3
ArrSize      DW       8

;-------------------------------------------------------------------------------------          
             ORG     StackTosStart    ; shows to compiler where is the RAM populating limit
;-------------------------------------------------------------------------------------
             ORG     CodeSegStart       ; Program Reset = Begins a CODE segment
             
main         mov.w   #StackTosStart,SP  ; Initialize stack pointer to the RAM end 
             CALL    #SysConfig
             clr     State              ; set to idle state at the beginning
;---------------------- FSM_loop -------------------------------------
state0       CMP     #0x00,State         ;check if state0           
             JNZ     state1
             CALL    #ClrLEDs
             bis.w   #CPUOFF+GIE,SR 

state1       CMP     #0x01,State         ;check if state1
             JNZ     state2
             DINT             
             CALL    #DecLED           
             EINT
            
state2       CMP     #0x02,State         ;check if state2
             JNZ     state3  
             DINT
             CALL    #RlaLED           
             EINT
             
state3       CMP     #0x04,State         ;check if state3
             JNZ     state4  
             CALL    #PWM_wave           ;infinite function
             
state4       CMP     #0x08,State         ;check if state3
             JNZ     state0
             DINT
             PUSH    #ID_Ohad
             CALL    #PrintArr
             EINT
            
             jmp     state0       
                 
             END
