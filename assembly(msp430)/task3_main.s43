#include "msp430g2553.h" // #include <msp430.h> - can be used as well

;The code Blinks the LEDs array from P1 or P2 (infinite loop)

            NAME    RESET
            PUBLIC  RESET
            EXTERN  State_0x01,State_0x02,State_0x04,State_0x05
;-------------------------------------------------------------------------------
            ORG      0C000h                  ; Program Reset
;-------------------------------------------------------------------------------             
             RSEG    CODE   
#define     SWstate &P1IN

RESET       MOV.W   #03FFh,SP               ; Initialize stackpointer
StopWDT     MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
SetupP1     BIC.B   #0xFF,&P1OUT
            BIS.B   #0x80,&P1DIR            ; P1 input, p1.7 output
SetupP2     BIS.B   #0xFF,&P2DIR            ; P2 output
            MOV.B   #0x00,&P2OUT
            BIC.B   #0xC0,&P2SEL
            
Switch_Mode  MOV.B    #0x0F,R4
             AND.B    SWstate,R4
             CMP.B    #0x01,R4          ;"number 1" switch is on we call the corresponding state func    
             JNZ      Check2
             CALL     #State_0x01                        
Check2       CMP.B    #0x02,R4            ;"number 2" switch 
             JNZ      Check3
             CALL     #State_0x02        
Check3       CMP.B    #0x04,R4            ;"number 3" switch
             JNZ      Check4
             CALL     #State_0x04
Check4       CMP.B    #0x05,R4            ;"number 3" switch
             JNZ      SleepState
             CALL     #State_0x05
SleepState   BIC.B    #0xFF,&P2OUT            ;if none of the above option 
             BIC.B    #0xFF,&P1OUT
             JMP      Switch_Mode                         
;------------------------------------------------------------------------------
            COMMON  INTVEC
;-------------------------------------------------------------------------------
            ORG     RESET_VECTOR                     ; MSP430 RESET Vector
            DW      RESET                   ;
            END
